from collections import deque
import sys
input = sys.stdin.readline

def 섬번호붙이기(i,j,넘버링):
    큐 = deque()
    큐.append([i,j])
    섬[i][j]=넘버링
    while 큐:
        행,열 = 큐.popleft()
        for k in range (4):
            행탐색 = 행 + 수직탐색[k]
            열탐색 = 열 + 수평탐색[k]
            if 행탐색<0 or 열탐색<0 or 행탐색>지도의크기-1 or 열탐색>지도의크기-1:
                continue

            if 방문[행탐색][열탐색]==0 and 섬[행탐색][열탐색]>0:
                방문[행탐색][열탐색] = 1
                섬[행탐색][열탐색] = 넘버링
                큐.append([행탐색,열탐색])

            #섬 확장을 위해 바다를 큐에 넣어줌.
            #여기서 0 = 바다, 바다와 인접한 섬을 바다 리스트에 넣어줌.
            if 섬[행탐색][열탐색]==0 and [행탐색,열탐색] not in 바다:
                바다.append([행,열])
def 섬_확장():
    루프=0
    거리=sys.maxsize
    while 바다:

        # 번호붙인 섬 출력
        #for i in 섬:
        #    print(i)

        루프 += 1
        바다_큐길이 = len(바다)
#        print(루프,바다_큐길이)
        for _ in range (바다_큐길이):
            행,열 = 바다.popleft()
            for k in range (4):
                행탐색 = 행 + 수직탐색[k]
                열탐색 = 열 + 수평탐색[k]
                if 행탐색<0 or 열탐색<0 or 행탐색>지도의크기-1 or 열탐색>지도의크기-1:
                    continue

                if 섬[행탐색][열탐색] == 0 and 방문[행탐색][열탐색]==0:
                    방문[행탐색][열탐색]=1
                    섬[행탐색][열탐색]=섬[행][열]
                    바다.append([행탐색,열탐색])
                elif 섬[행탐색][열탐색] < 섬[행][열]:
                    거리 = min(거리, 루프*2 - 1)

                elif 섬[행탐색][열탐색] > 섬[행][열]:
                    거리 = min(거리, (루프-1) * 2)
    return 거리

수직탐색=[1,-1,0,0]
수평탐색=[0,0,1,-1]

지도의크기=int(input()) # 지도크기
섬=[ list(map(int,input().split())) for _ in range (지도의크기) ]
바다=deque()
방문=[ [0]*지도의크기 for _ in range (지도의크기) ]
넘버링=0
for i in range (지도의크기):
    for j in range (지도의크기):
        if 방문[i][j]==0 and 섬[i][j]>0:
            넘버링+=1
            방문[i][j]=1
            섬번호붙이기(i,j,넘버링)

#모든 섬 확장시켜가며 거리재기
방문=[ [0]*지도의크기 for _ in range (지도의크기) ]
print(섬_확장())


"""
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
2 초	192 MB	20102	7021	4409	32.997%
문제
여러 섬으로 이루어진 나라가 있다. 이 나라의 대통령은 섬을 잇는 다리를 만들겠다는 공약으로 인기몰이를 해 당선될 수 있었다. 하지만 막상 대통령에 취임하자, 다리를 놓는다는 것이 아깝다는 생각을 하게 되었다. 그래서 그는, 생색내는 식으로 한 섬과 다른 섬을 잇는 다리 하나만을 만들기로 하였고, 그 또한 다리를 가장 짧게 하여 돈을 아끼려 하였다.

이 나라는 N×N크기의 이차원 평면상에 존재한다. 이 나라는 여러 섬으로 이루어져 있으며, 섬이란 동서남북으로 육지가 붙어있는 덩어리를 말한다. 다음은 세 개의 섬으로 이루어진 나라의 지도이다.



위의 그림에서 색이 있는 부분이 육지이고, 색이 없는 부분이 바다이다. 이 바다에 가장 짧은 다리를 놓아 두 대륙을 연결하고자 한다. 가장 짧은 다리란, 다리가 격자에서 차지하는 칸의 수가 가장 작은 다리를 말한다. 다음 그림에서 두 대륙을 연결하는 다리를 볼 수 있다.



물론 위의 방법 외에도 다리를 놓는 방법이 여러 가지 있으나, 위의 경우가 놓는 다리의 길이가 3으로 가장 짧다(물론 길이가 3인 다른 다리를 놓을 수 있는 방법도 몇 가지 있다).

지도가 주어질 때, 가장 짧은 다리 하나를 놓아 두 대륙을 연결하는 방법을 찾으시오.

입력
첫 줄에는 지도의 크기 N(100이하의 자연수)가 주어진다. 그 다음 N줄에는 N개의 숫자가 빈칸을 사이에 두고 주어지며, 0은 바다, 1은 육지를 나타낸다. 항상 두 개 이상의 섬이 있는 데이터만 입력으로 주어진다.

출력
첫째 줄에 가장 짧은 다리의 길이를 출력한다.
"""